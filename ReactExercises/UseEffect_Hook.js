// Categories component'i mount olduÄŸunda https://api.example.com/category adresine get isteÄŸi atÄ±p aldÄ±ÄŸÄ± response'da gelen veriyi(data) categories state'ine ekleyen kodu yaz.
// Ä°pucu: import'larÄ± unutma
//useEffect Hookâ€™u ile API Ã§aÄŸrÄ±sÄ± yaptÄ±k.
//	â€¢	BoÅŸ baÄŸÄ±mlÄ±lÄ±k dizisi ([]) verdik, bÃ¶ylece component sadece ilk mount olduÄŸunda Ã§aÄŸrÄ± yapar.
//	2.	Axios ile GET isteÄŸi attÄ±k.
//	â€¢	BaÅŸarÄ±lÄ± olursa (.then() bloÄŸu): Gelen response.data deÄŸerini categories stateâ€™ine ekledik.
//	â€¢	Hata alÄ±rsa (.catch() bloÄŸu): Konsola hata mesajÄ±nÄ± yazdÄ±rdÄ±k.
//	3.	CategoryList componentâ€™ine categories prop olarak ilettik.
//	â€¢	BÃ¶ylece gelen verileri liste iÃ§inde gÃ¶sterebiliriz.

import { useState, useEffect } from "react"; // âœ… useEffect import edildi!
import axios from "axios";
import CategoryList from "./CategoryList.js"; 

export default function Categories() {
  const [categories, setCategories] = useState([]);

  useEffect(() => {
    console.log("Categories bileÅŸeni mount oldu! Veri Ã§ekiliyor...");
    
    axios
      .get("https://api.example.com/category")
      .then((response) => {
        setCategories(response.data); // âœ… APIâ€™den gelen veriyi state'e kaydet
      })
      .catch((error) => {
        console.error("Veri Ã§ekme hatasÄ±:", error);
      });

  }, []); // ğŸ”¥ Sadece component mount olduÄŸunda Ã§alÄ±ÅŸÄ±r

  return <CategoryList categories={categories} />;
}
