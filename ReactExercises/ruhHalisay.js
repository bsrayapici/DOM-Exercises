AÅŸaÄŸÄ±daki React uygulamasÄ±nÄ± tamamla.  


- State hookunu kullanarak bir sayruhHaliac isimli state oluÅŸturun. 
  Bu state'in baÅŸlangÄ±Ã§ deÄŸeri ilkRuhHali olsun.
- 'stil' nesnesinde 'color' Ã¶zelliÄŸi sabit olarak "royalblue" olarak belirlenmiÅŸ. 
  EÄŸer ruhHali mutlu ise "royalblue", deÄŸilse "crimson" olacak ÅŸekilde kodu dÃ¼zenle.
- JSX'te bazÄ± statik kodlanmÄ±ÅŸ bilgiler var. Buralarda sÃ¼slÃ¼ paranetezler iÃ§inde JS ifadeleri kullanarak dinamik hale getir. 
- YardÄ±mcÄ± fonksiyonlarÄ± yaz. 
- class="code">Reset'e tÄ±klandÄ±ÄŸÄ±nda state'i ilkRuhHali yapsÄ±n.


import { useState } from "react";

const ilkRuhHali = "NasÄ±l hissettiÄŸimi bilmiyorum :-|";
const mutluRuhHali = "OldukÃ§a mutlu :)";
const uzgunRuhHali = "OldukÃ§a Ã¼zgÃ¼n :(";

export default function App() {
  // ðŸ“Œ 1. `useState` ile ruh hali state'ini oluÅŸtur
  const [ruhHali, setRuhHali] = useState(ilkRuhHali);

  // ðŸ“Œ 2. Mutlu etme fonksiyonu
  const mutluEt = () => {
    setRuhHali(mutluRuhHali);
  };

  // ðŸ“Œ 3. ÃœzgÃ¼n yapma fonksiyonu
  const uZ = () => {
    setRuhHali(uzgunRuhHali);
  };

  // ðŸ“Œ 4. Resetleme fonksiyonu
  const reset = () => {
    setRuhHali(ilkRuhHali);
  };

  // ðŸ“Œ 5. Dinamik stil (Ruh haline gÃ¶re renk deÄŸiÅŸtir)
  const stil = {
    fontSize: "1.5em",
    marginBottom: "0.3em",
    color: ruhHali === mutluRuhHali ? "royalblue" : ruhHali === uzgunRuhHali ? "crimson" : "black",
  };

  return (
    <div className="widget-moods container">
      <h2>Ruh Halleri</h2>
      <div id="ruhHali" style={stil}>
        {ruhHali} {/* ðŸ“Œ Ruh hali dinamik hale getirildi */}
      </div>
      <div>
        <button id="mutluEt" onClick={mutluEt}>
          Mutlu Et
        </button>
        <button id="uz" onClick={uZ}>
          Ãœz
        </button>
        <button id="resetRuhHali" onClick={reset}>
          Reset
        </button>
      </div>
    </div>
  );
}
