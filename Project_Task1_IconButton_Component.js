BugÃ¼n ÅŸirkette faydalÄ± bir eÄŸitim aldÄ±nÄ±z. Bu eÄŸitimde, FontAwesome isimli bir kÃ¼tÃ¼phaneyi kullanarak birbiriyle uyumlu bir Ã§ok iconu projelerinde nasÄ±l kullanabileceÄŸini Ã¶ÄŸrendin.

Bunu pratik etmeniz iÃ§in de size 1-2 Ã¶rnek proje verdiler.

Bu projede, dinamik olarak Ã¶zel tasarÄ±ma sahip icon button componenti oluÅŸturacaÄŸÄ±z. Buttonlar iÃ§in styling UX developer tarafÄ±ndan Ã¶nden hazÄ±rlanmÄ±ÅŸ. Bize ise sadece buton Ã¼reten fonksiyonu yazma gÃ¶revi dÃ¼ÅŸÃ¼yor. Gerekli detaylar components klasÃ¶rÃ¼ iÃ§indeki iconButton.js iÃ§inde.

Ä°pucu: FontAwesome kÃ¼tÃ¼phanesine bakabilirsin.
Ä°pucu: createElement ve appendChild metodlarÄ±na ihtiyaÃ§ duyabilirsin.

  AdÄ±m 1: AÅŸaÄŸÄ±daki HTML button yapÄ±sÄ±nÄ± oluÅŸturup geri dÃ¶necek 'IconButton' isimli bir fonksiyon yazÄ±n.

  <button class="btn btn-{btnColor}">
    <i class="{iconClass}" />
    {btnText}
  </button>

  'IconButton' fonksiyonu 3 argÃ¼man alacak: 
  - btnText: butonun iÃ§indeki metin
  - btnColor: butonun arkplan rengi [ blue | orange | red ] deÄŸerlerini alabilir
  - iconClass: FontAwesome kÃ¼tÃ¼phanesi icon class ismi 

AdÄ±m 2: Bu fonksiyonu kullanarak aÅŸaÄŸÄ±daki butonlarÄ± oluÅŸturun: 

    1. { btnText: "AÃ§", btnColor: "blue", iconClass: "fa fa-folder-open" }
    2. { btnText: "DÃ¼zenle", btnColor: "orange", iconClass: "fa fa-pen" }
    3. { btnText: "Sil", btnColor: "red", iconClass: "fa fa-trash" }

AdÄ±m 3: OluÅŸturduÄŸunuz buttonlarÄ± div#icon-buttons iÃ§erisine ekleyin

*/

function IconButton(btnText, btnColor, iconClass) {
  const button = document.createElement('button');
  button.classList.add('btn', `btn-${btnColor}`);

  const icon = document.createElement('i');
  icon.className = iconClass;
  button.appendChild(icon);

  const text = document.createTextNode(`${btnText}`);
  button.appendChild(text);

  return button;
}
const container = document.getElementById('icon-buttons');
const buttons = [
  { btnText: 'AÃ§', btnColor: 'blue', iconClass: 'fa fa-folder-open' },
  { btnText: 'DÃ¼zenle', btnColor: 'orange', iconClass: 'fa fa-pen' },
  { btnText: 'Sil', btnColor: 'red', iconClass: 'fa fa-trash' },
];

// âœ… 4. `buttons` dizisini `forEach` ile dÃ¶n ve `IconButton` ile her butonu oluÅŸturup ekle
buttons.forEach(({ btnText, btnColor, iconClass }) => {
  const buttonComponent = IconButton(btnText, btnColor, iconClass); // ğŸ“Œ Buton component'ini oluÅŸtur
  container.appendChild(buttonComponent); // ğŸ“Œ `icon-buttons` iÃ§erisine ekle
});
